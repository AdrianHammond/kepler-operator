
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: keplerdependencies.dependency.kepler.operator.com
spec:
  group: dependency.kepler.operator.com
  names:
    kind: KeplerDependency
    listKind: KeplerDependencyList
    plural: keplerdependencies
    singular: keplerdependency
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: KeplerDependency is the Schema for the keplerdependencies API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: KeplerDependencySpec defines the desired state of KeplerDependency
          properties:
            collectorSpec:
              properties:
                image:
                  type: string
                ratioMetrics:
                  properties:
                    core:
                      type: string
                    dram:
                      type: string
                    global:
                      type: string
                    uncore:
                      type: string
                  type: object
                sources:
                  properties:
                    bpf:
                      type: string
                    cgroupv2:
                      enum:
                      - enable
                      - disable
                      type: string
                    counters:
                      type: string
                    kubelet:
                      type: string
                  type: object
              type: object
            estimatorSpec:
              properties:
                enable:
                  default: true
                  type: boolean
                image:
                  type: string
                strategy:
                  properties:
                    nodeSelectors:
                      items:
                        properties:
                          evalKey:
                            type: string
                          key:
                            type: string
                          maxValue:
                            format: int64
                            type: integer
                          minValue:
                            format: int64
                            type: integer
                          selector:
                            additionalProperties:
                              type: string
                            description: not sure if this is correct
                            type: object
                          type:
                            type: string
                          value:
                            format: int64
                            type: integer
                          values:
                            items:
                              format: int64
                              type: integer
                            type: array
                        type: object
                      type: array
                  required:
                  - nodeSelectors
                  type: object
              type: object
            modelServer:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "make" to regenerate code after modifying this file'
              properties:
                enablePipelines:
                  items:
                    enum:
                    - FooOne
                    - FooTwo
                    type: string
                  type: array
                image:
                  type: string
                install:
                  default: false
                  type: boolean
                modelStorage:
                  description: Model Server CRD Requirements
                  properties:
                    hostPath:
                      type: string
                    type:
                      default: local
                      type: string
                  type: object
                queryStep:
                  format: int64
                  type: integer
                samplingInterval:
                  format: int64
                  type: integer
              required:
              - enablePipelines
              type: object
          type: object
        status:
          description: KeplerDependencyStatus defines the observed state of KeplerDependency
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
