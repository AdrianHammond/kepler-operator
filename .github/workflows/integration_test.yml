name: Integration test
on:
  pull_request:

    branches:
    - v1alpha1

env:
  GO_VERSION: "1.19"
  KIND_VERSION: "0.15.0"
  GO111MODULE: "on"
  OPERATOR_IMAGE: "quay.io/sustainable_computing_io/kepler-operator"
  KUBECONFIG: /tmp/kubeconfig 
 

jobs:
  build-operator:
    name: build-operator
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@main
        with: 
          go-version: ${{ env.GO_VERSION }}

      - name: Build operator container
        run: make docker-build IMG=${OPERATOR_IMAGE}

      # - name: Create artifact path
      #   run: mkdir -p /tmp/kepler-operator/

      # - name: Save container as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: kepler-operator
      #     path: /tmp/kepler-operator/image.tar

      - name: Load operator image into cluster
        run: |
          docker inspect ${OPERATOR_IMAGE}
          docker tag ${OPERATOR_IMAGE} ${OPERATOR_IMAGE}:ci-build

      - name: install kernel headers
        run: |
          sudo apt-get install -y linux-headers-`uname -r`
          sudo ls /usr/src/linux-headers-`uname -r`

      - name: install bcc
        run: |
            wget https://github.com/sustainable-computing-io/kepler-ci-artifacts/releases/download/v0.25.0/bcc_v0.25.0.tar.gz
            tar -zxvf bcc_v0.25.0.tar.gz
            sudo dpkg -i libbcc_0.25.0-1_amd64.deb

      - name: install kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

      - name: start local k8s cluster
        run: make cluster-up
        env:
            CLUSTER_PROVIDER: ${{matrix.kube_provider}}
            PROMETHEUS_ENABLE: "true"
            GRAFANA_ENABLE: "false"

      - name: Start operator
        run: |
          make deploy IMG=${OPERATOR_IMAGE}:ci-build

      - name: Run e2e tests
        run: |
          kubectl get pods -n kepler-operator-system

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io/sustainable_computing_io
          username: ${{ secrets.BOT_NAME }}
          password: ${{ secrets.BOT_TOKEN }}

      - name: Push to registry (latest)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          github.ref == 'refs/heads/v1alpha1'
        run: |
          docker push "${OPERATOR_IMAGE}"

      - name: Push to registry (version tag)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          startsWith(github.ref, 'refs/tags/v')
        run: |
          [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+\..*) ]] || exit 0
          TAG="${BASH_REMATCH[1]}"
          echo "Pushing to $TAG"
          docker tag "${OPERATOR_IMAGE}" "${OPERATOR_IMAGE}:${TAG}"
          docker push "${OPERATOR_IMAGE}:${TAG}"


  e2e-success:
    name: Successful e2e tests
    needs: [build-operator]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        run: echo "Previous steps were successful"